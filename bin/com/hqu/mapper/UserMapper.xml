<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserMapper">

	<!-- 查询用户信息
		select :将select标签内容称为statement
		id：是在user.xml的唯一标识，statement的id
		parmeterType:指向sql（向statement中）中传入参数的类型
		#{}：表示一个点位符，{}中的id表示传入变量名，当传入单个值{}中的变量可以随意
		resultType：将sql查询结果集映射成java对象的类型 -->
	<select id="findUserByName" parameterType="User" resultType="User">
		SELECT * FROM User 
		WHERE 1= 1
		<if test="username != null or birthday != null">
			<if test="username != null">
				AND username = #{username}
			</if>
			<if test="birthday != null">
				<![CDATA[AND birthday <= #{birthday}]]>
			</if>
		</if>
	</select>

	<insert id="insertUser" parameterType="User">
		INSERT INTO
		user(username,birthday,sex,address,detail,score)
		VALUES (#{username},#{birthday},#{sex},#{address},#{detail},#{score})
	</insert>
	
	<!-- 批量插入 -->
	<insert id="insertUsers" parameterType="list">
		INSERT INTO USER (
			username,
			birthday,
			sex,
			address,
			detail,
			score
		)
		VALUES
		<foreach collection="list" item="itm" index="index" separator=",">
			(
				#{itm.username}, 
				#{itm.birthday},
				#{itm.sex},
				#{itm.address},
				#{itm.detail}, 
				#{itm.score}
			)
		</foreach>
	</insert>
	
	<delete id="deleteUserById">
		DELETE FROM User WHERE id = #{id}
	</delete>
	
	<update id="testUpdateUserById" parameterType="User" >
		UPDATE User SET username = #{username}, sex = #{sex} WHERE id = #{id}
	</update>
	
	<!-- 批量更新 -->
	<update id="testUpdateUsersById" parameterType="list" >
		<foreach collection="list" item="item" index="index" open="" close="" separator=";">
			UPDATE User
			<set>
				<if test="item.username != null">
					username = #{item.username}
				</if>
			</set>
			WHERE id = #{item.id}
		</foreach>
	</update>
	
</mapper>